상속관계일 경우 자식 엔티티를 조회하면 자동으로 부모 테이블과 JOIN된다.

@OneToMany
-> 클래스를 기준으로

@JoinColumn

Fetch의 default
:EAGER -> 즉시로딩
But 1대N에서는 Lazy -> 지연로딩
즉시로딩은 무조건 쓰지마라 

fetch
연관관계를 맺고 있는 경우, 조회시 객체를 가져오는 방법을 기술하는 옵션이다.
- EAGER
	모든 연관관계 객체를 JOIN하여 한방 쿼리로 가져온다.
- LAZY
	첫 객체만 SELECT 하고, 연관관계 객체를 사용할 때 쿼리가 다시 실행된다.

inner join 때는 on이 아닌 where

복잡한 연관관계 속에서 EAGER로 사용하면 불필요한 JOIN이 발생하기 때문에 성능이슈가 발생할 수 있다.
따라서 실무에서는 LAZY로 설정해야 하며,
한방 쿼리가 필요할 때에는 JPQL을 사용하여 정확히 원하는 테이블끼리만 JOIN하여 사용한다.

//OneToMany일 경우 fetch의 기본 옵션이 Lazy이다.

1:N관계에서 한 방 쿼리를 작성하면 JOIN은 되지만,
여러 개가 조회되는 N의 특성상 매번 select 쿼리가 한 번 더 실행된다.
따라서 1:N 관계일 경우에는 JOIN을 할 필요가 없다.

cascade(영속성 전이)
엔티티가 영속상태로 전활될 때 참조 엔티티도 영속상태로 같이 전환되고,
삭제상태로 전환될 때도 참조 엔티티까지 삭제상태로 전환된다.
즉, 연관관계 객체에도 영속 상태를 전이하고 싶을 때 사용하는 옵션이다.

참조 엔티티 모두 영속 상태로 전환해야 한다.
하지만 cascade에 CascadeType.PERSIST를 설정하면,
자동으로 참조 엔티티까지 영속 상태로 전환되기 때문에
아래의 코드를 작성할 필요 없다. 
boardDAO.save(reply1);
boardDAO.save(reply2);

엔티티를 영속상태로 변경하고 참조 엔티티까지 영속상태로 변경되었다면,
현재 1차 캐시에는 엔티티 및 참조 엔티티 모두 등록되어 있는 상태이다.

Hibernate의 쓰기지연저장소 쿼리 실행 순서
-읽어보기
https://techblog.woowahan.com/2695/

-find, updqte, insert, remove 순서로 실행된다.
-find를 하기 전에 대상 엔티티 쿼리가 있다면, flush 후 find가 진행된다.